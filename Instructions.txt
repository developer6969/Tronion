Pre-Required Softwares : 
    Xampp apache
    Visual Code
    Laravel with composer
    Github Account

Initial Steps taken :
    Installed a new laravel app
        $ laravel new Tronion
    Created a new repository in Github Account
    Initialise git in project
        $ git init
    Connect to github and push commits
        $ git remote add origin https://github.com/developer6969/Tronion.git
        $ git push -u origin master

Laravel 6.0 from scratch from laracast.com
TOPIC|CLASS :-
T1|C5. Basic routing & views
T1|C6. Pass request data to views
T1|C7. Route Wildcard
T1|C8. Routing to Controller

T2|C9. Setup a Database Connection
T2|C10. Understanding Eloquent
        $ php artisan make:model Post
T2|C11. Migrations 
        [For all available commands -> $ php artisan list]
        $ php artisan make:migration create_posts_table
        $ php artisan migrate
        -- To add a new coloum in exiting table
        $ php artisan make:migration add_title_to_posts_table
        $ php artisan migrate
        -- alternatively, update existing table migration and then
        $ php artisan migrate:fresh
T2|C12. Generate multiple files from single comand
        $ php artisan make:model Category -mc (migration & controller)  
        (Use -a for all -> Model, Factory, Migration, Seeder, Controller)
T2|C13. Using model to perform business logic 
        $ php artisan tinker (starts tinker)
        Some Tinker commands :
            >>> $category = new App\Category;
            => App\Category {#3026}
            >>> $category->name = 'Wordpress';
            => "Wordpress"
            >>> $category->save();
            >>> App\Category::all();
            >>> App\Category::first();
            >>> App\Category::where('active', false)->get();
            >>> App\Category::all();

            $cat = App\Category::first();
            => App\Category {#3035
                 id: 1,
                 name: "Wordpress",
                 active: 1,
                 created_at: "2020-05-01 11:03:48",
                 updated_at: "2020-05-01 11:03:48",
               }
            >>> $cat->active();
            => null
            >>> $cat->inactive();
            => null
T3|C14. View pages & components structure
T3|C17. Assets Compilation (SASS)
T4|C18. Dynamic data using Controllers
        Added new data into database via tinker
            $ php artisan tinker
            Psy Shell v0.10.3 (PHP 7.3.9 â€” cli) by Justin Hileman
            >>> $post = new App\Post;
            => App\Post {#3032}
            >>> $post->title = 'Becaming better then yourself';
            => "Becaming better then yourself"
            >>> $post->slug = 'becaming-better-then-yourself';
            => "becaming-better-then-yourself"
            >>> $post->extract = 'This is not going to be much deferent then so many';
            => "This is not going to be much deferent then so many"
            >>> $post->body = 'So here i started doing things all by self thought i need just a little help sometimes in some areas so keep this in mind that practise is the only way to master anything cause it train your brains to think in a particular manner';
            => "So here i started doing things all by self thought i need just a little help sometimes in some areas so keep this in mind that practise is the only way to master anything cause it train your brains to think in a particular manner"
            >>> $post->save();
T4|C21. Controller with resources
        Create a model first
        $ php artisan make:model Post
        Then create controller with resources & model binding
        $ php artisan make:controller PostController --resource --model=Post

        GET /videos          [List of resources]
        GET /videos/create   [Show form for creating new resource]
        POST /videos         [Persist new video to database]
        GET /videos/:id      [Show a particular video]
        GET /videos/:id/edit [Shpw form for editing existing resource]
        PUT /videos/:id      [Persist the changes made above]
        DELETE /videos/:id   [Delete resources ]

        GET /videos/subscribe
        POST /videos/subscriptions => VideoSubscriptionController@store
T4|C23. Perform CRUD Operations via PostController
        a. Create a route
        b. Create a controller to handle route
        c. Create a view to display what controller funnction returned
T5|C34. Authentication
        [IF NOT INSTALLED ALREADY]
        $ composer require laravel/ui
        $ php artisan ui vue --auth
        Discover various ways to use & 
        check authentication at ui level
T5|C35. Password Reset Process
        [.env mail log setting
                MAIL_MAILER=log
                MAIL_HOST=smtp.gmail.com
                MAIL_PORT=465
                MAIL_USERNAME=pg.091216@gmail.com
                MAIL_PASSWORD=Rosterfrost#4862
                MAIL_ENCRYPTION=TLS
                MAIL_FROM_ADDRESS=pg.091216@gmail.com
                MAIL_FROM_NAME="${APP_NAME}"
        ]
        1. Click 'Forget Password'
        2. Fill out a form with their email address
        3. Prepare a unique token and associate it with the user's Account
        4. Send an email with an unique link back to our site that confirms email ownership
        5. Link back to website, confirms the token, and set new password.
        Check 'sample_mail' file for demo mail sent to user